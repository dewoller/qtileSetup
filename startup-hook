#!/bin/bash
#echo "starting" >>/tmp/a.c
#pkill gnome-panel
#gnome-panel &
~/bin/LovelyWords.sh &
~/bin/export_x_info &
#if [ 0 -eq  "$(pgrep -c -f gnome-keyring-daemon)" ] ; then
#  nohup /home/dewoller/bin/delay 10 /usr/bin/gnome-keyring-daemon --start --components=gpg,pkcs11,secrets,ssh &
# export GNOME_KEYRING_CONTROL GNOME_KEYRING_PID GPG_AGENT_INFO SSH_AUTH_SOCK
#fi

#SSH_ENV="$HOME/.ssh/environment"
#
#function start_agent {
#    echo "Initialising new SSH agent..."
#    /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
#    echo succeeded
#    chmod 600 "${SSH_ENV}"
#    . "${SSH_ENV}" > /dev/null
#    /usr/bin/ssh-add;
#}
#
## Source SSH settings, if applicable
#
#if [ -f "${SSH_ENV}" ]; then
#    . "${SSH_ENV}" > /dev/null
#    #ps ${SSH_AGENT_PID} doesn't work under cywgin
#    ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
#        start_agent;
#    }
#else
#    start_agent;
#fi


# don't need a trayer, looks like it is built into qtile?
#/home/dewoller/bin/tray &
#trayer --edge top --align right --height 24 --expand false --width 150 --widthtype request --tint 0x000000&

if [ 0 -eq  "$(pgrep -c owncloud)" ] ; then
  nohup /home/dewoller/bin/delay 10 owncloud &
fi

if [ 0 -eq  "$(pgrep -c touchegg)" ] ; then
  nohup /home/dewoller/bin/delay 10 touchegg &
fi

if [ 0 -eq  "$(pgrep -c parcellite)" ] ; then
  nohup /home/dewoller/bin/delay 10 parcellite &
fi

if [ 0 -eq  "$(pgrep -c  scudcloud)" ] ; then
  QT_GRAPHICSSYSTEM=gtk scudcloud --minimized=True &
fi

if [ 0 -eq  "$(pgrep -c skype)" ] ; then
  nohup /home/dewoller/bin/delay 10 skype&
fi

if [ 0 -eq  "$(pgrep -c pavucontrol)" ] ; then
    pavucontrol &
fi
  
if [ 0 -eq  "$(pgrep -c pidgin)" ] ; then
  nohup /home/dewoller/bin/delay 10 pidgin  &
fi

if [ 0 -eq  "$(pgrep -c dropbox)" ] ; then
  date >>/tmp/dropboxStarted.txt
  nohup /home/dewoller/bin/delay 20 dropbox start &
fi

if [ 0 -eq  "$(pgrep -c -f 'keepassx /store/Dropbox/keepassx/password.kdbx' )" ] ; then
    pkill keepassx
    QT_GRAPHICSSYSTEM=gtk keepassx /store/Dropbox/keepassx/password.kdbx&
fi

if [ 0 -eq  "$(pgrep -c firefox)" ] ; then
    firefox &
fi

if [ 0 -eq  "$(pgrep -c blueman-applet)" ] ; then
      nohup /home/dewoller/bin/delay 10 blueman-applet &
fi

if [ 0 -eq  "$(pgrep -c -f /usr/bin/indicator-cpufreq)" ] ; then
      nohup /home/dewoller/bin/delay 10 indicator-cpufreq &
fi

if [ 0 -eq  $(pgrep -c -f 'chrome --force-device-scale-factor') ] ; then
    pkill -f /opt/google/chrome-beta/chrome
    /opt/google/chrome-beta/chrome --force-device-scale-factor=1  --touch-devices=2      &
fi

if [ 0 -eq  "$(pgrep -c thunderbird)" ] ; then
    thunderbird &
fi

if [ 0 -eq  "$(pgrep -c gnome-terminal)" ] ; then
    gnome-terminal &
fi
# Network manager, so we don't have to configure wifi at the command line.
if [ 0 -eq  "$(pgrep -c nm-applet)" ] ; then
      nohup /home/dewoller/bin/delay 10 nm-applet &
  else
      sudo service network-manager restart 
fi

# Applet for managing print jobs from the tray.
if [ 0 -eq  "$(pgrep -c -f /usr/share/system-config-printer/applet.py )" ] ; then
      nohup /home/dewoller/bin/delay 10 system-config-printer-applet &
fi

#
# APPLICATION LAUNCHER
#

# Use synapse as our app launcher. (-s: don't display until requested) 
#if [ 0 -eq  "$(pgrep -c synapse)" ] ; then
#  nohup /home/dewoller/bin/delay 10 synapse -s &
#fi

# On login, we unlock the ssh keychain so we're not prompted for 
# passphrases later. We pipe /dev/null to ssh-add to make it realize 
# it's not running in a terminal. Otherwise, it won't launch the prompt.
# 
# If you don't use the ssh keychain you may not want this. Commented
# by default as it is assumed many users will not want this feature.

# export SSH_ASKPASS="/usr/bin/ssh-askpass"
# cat /dev/null | ssh-add &

# I disable the middle mouse button because otherwise I constantly 
# accidentally paste unwanted text in the middle of my code while scrolling. 
# Note that the id of the mouse device may be different depending on 
# which usb port it is plugged into! To find it, use:
# xinput list |grep 'id='
# In the following command, the id is the first argument, the rest is 
# the remapping.

# Commented by default as it is assumed many users will not want this.
# xinput set-button-map 10 1 0 3 4 5 6 7

